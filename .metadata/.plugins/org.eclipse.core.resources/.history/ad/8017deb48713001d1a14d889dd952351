package metodos;

import javax.swing.JOptionPane;

public class DesafioFinal {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String[][] montarEstrutura;
		String[][] jogoTabu = new String[3][3];
		String jogador = "";
		String vez = "";
		int nroJogada = 0;
		int[][] colocarJogada = new int [3][3];
		
		

		do {
			montarEstrutura = estrutura();
			mostrarTabu(montarEstrutura);
			vezJogador ();
			colocarJogada = colocar (jogoTabu);
			condicaoVitoria (colocarJogada);
			

			
			

		} while (nroJogada == 9);

	}

	public static int[][] condicaoVitoria(int[][] jogoTabu) {
		int jogador=0;
		int nroJogada=0;
		int fim = 0;

		for (int cont = 0; cont < 3; cont++) {
			if ((jogoTabu[cont][1] == jogoTabu[cont][2]) && (jogoTabu[cont][2] == jogoTabu[cont][3])) {
				JOptionPane.showMessageDialog(null, "Ganhou o Jogo!");
				fim = 1;
			} else if ((jogoTabu[1][cont] == jogoTabu[2][cont]) && (jogoTabu[2][cont] == jogoTabu[3][cont])) {
				JOptionPane.showMessageDialog(null, "Ganhou o Jogo!");
				fim = 1;
			}
		}
		if ((jogoTabu[1][1] == jogador) && (jogoTabu[2][2] == jogador) && (jogoTabu[3][3] == jogador)) {
			JOptionPane.showMessageDialog(null, "Ganhou o Jogo!");
			fim = 1;
		} else if ((jogoTabu[1][3] == jogador) && (jogoTabu[2][1] == jogador) && (jogoTabu[3][1] == jogador)) {
			JOptionPane.showMessageDialog(null, "Ganhou o Jogo!");
			fim = 1;
		} else if ((nroJogada == 0) && (fim == 0)) {
			JOptionPane.showMessageDialog(null, "Deu velha");
		}

		return jogoTabu;
	}

	public static String[][] estrutura() {
		
		String[][] jogoTabu = new String[3][3];
		int l = 0;
		int c = 0;
		int soma = 0;
		for (l = 0; l < 3; l++) {
			for (c = 0; c < 3; c++) {
				soma = soma + 1;
				jogoTabu[l][c] = Integer.toString(soma);
				//System.out.println(jogoTabu[l][c]);

			}
		}
		return jogoTabu;
	}

	public static void vezJogador() {
		String jogador = "";
		int nroJogada = 0;
		nroJogada = nroJogada + 1;
		if (nroJogada % 2 != 0) {
			jogador = "X";
			JOptionPane.showMessageDialog(null, "Vez do Jogador X");
		} else {
			jogador = "O";
			JOptionPane.showMessageDialog(null, "Vez do Jogador O");
		}
	}

	public static int[][] colocar(String[][] jogoTabu) {
		int jogada= 0;
		boolean validadoraJogada = false;
		String jogador = "";

		validadoraJogada = false;
		jogada = Integer.parseInt(JOptionPane.showInputDialog("Aonde deseja Jogar?"));
		while ((jogada < 1) && (jogada > 9)) {
			JOptionPane.showMessageDialog(null, "Jogada inválida");
			jogada = Integer.parseInt(JOptionPane.showInputDialog("Aonde deseja Jogar?"));
		}
		switch (jogada) {
		case 1:
			if ((jogoTabu[1][1] != "X") && (jogoTabu[1][1] != "O")) {
				jogoTabu[1][1] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}
			break;
		case 2:
			if ((jogoTabu[1][2] != "X") && (jogoTabu[1][2] != "O")) {
				jogoTabu[1][2] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}

			break;
		case 3:
			if ((jogoTabu[1][3] != "X") && (jogoTabu[1][3] != "O")) {
				jogoTabu[1][3] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}

			break;
		case 4:
			if ((jogoTabu[2][1] != "X") && (jogoTabu[2][1] != "O")) {
				jogoTabu[2][1] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}

			break;
		case 5:
			if ((jogoTabu[2][2] != "X") && (jogoTabu[2][2] != "O")) {
				jogoTabu[2][2] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}
			break;
		case 6:
			if ((jogoTabu[2][3] != "X") && (jogoTabu[2][3] != "O")) {
				jogoTabu[2][3] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}
			break;
		case 7:
			if ((jogoTabu[3][1] != "X") && (jogoTabu[3][1] != "O")) {
				jogoTabu[3][1] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}
			break;
		case 8:
			if ((jogoTabu[3][2] != "X") && (jogoTabu[3][2] != "O")) {
				jogoTabu[3][2] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}
			break;
		case 9:
			if ((jogoTabu[3][3] != "X") && (jogoTabu[3][3] != "O")) {
				jogoTabu[3][3] = jogador;
				validadoraJogada = true;
			} else {
				JOptionPane.showMessageDialog(null, "Jogada inválida");
			}
			break;
		}

		return jogada;
	}
	
	

	public static void mostrarTabu(String[][] montarEstrutura) {
		int l = 0;
		int c = 0;
		String mostrar = "";

		for (l = 0; l < 3; l++) {
			for (c = 0; c < 3; c++) {
				mostrar = mostrar + montarEstrutura[l][c];
				mostrar = mostrar + " ";
			}
			mostrar = mostrar + "\n";
		}
		JOptionPane.showMessageDialog(null, mostrar);
	}
}